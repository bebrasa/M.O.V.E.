import asyncio
import matplotlib.pyplot as plt
import numpy as np
from bleak import BleakClient

# üîπ –£–∫–∞–∂–∏—Ç–µ MAC-–∞–¥—Ä–µ—Å ESP32-C3
ESP32_MAC = "F0:F5:BD:FD:92:6E"

# üîπ UUID —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
CHARACTERISTIC_UUID = "abcdef01-1234-5678-1234-56789abcdef0"

# üîπ –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
x_data = []
y_data = []

# üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞
plt.ion()  # –í–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
fig, ax = plt.subplots()
line, = ax.plot([], [], 'b-', label="–°–∏–≥–Ω–∞–ª")
ax.set_xlim(0, 1000)
ax.set_ylim(-300, 300)
ax.set_xlabel("–í—Ä–µ–º—è")
ax.set_ylabel("–ó–Ω–∞—á–µ–Ω–∏–µ")
ax.legend()

async def read_ble():
    async with BleakClient(ESP32_MAC) as client:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ ESP32-C3")

        def notification_handler(sender, data):
            global x_data, y_data

            try:
                value = int(data.decode('utf-8'))
                print(f"üì° –ü–æ–ª—É—á–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ: {value}")

                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                x_data.append(len(x_data))
                y_data.append(value)


                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
                line.set_xdata(x_data)
                line.set_ydata(y_data)
                ax.set_xlim(min(x_data), max(x_data) + 10)
                ax.relim()
                ax.autoscale_view(True, True, True)
                plt.draw()
                plt.pause(0.01)

            except ValueError:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: '{data}'")

        # –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        await client.start_notify(CHARACTERISTIC_UUID, notification_handler)

        print("üì° –û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")
        while True:
            await asyncio.sleep(0.1)

# –ó–∞–ø—É—Å–∫ BLE-—á—Ç–µ–Ω–∏—è
asyncio.run(read_ble())
